buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "mysql:mysql-connector-java:5.1.38"
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

// Note: "common.gradle" in the root project contains additional initialization
// for this project. This initialization is applied in the "build.gradle"
// of the root project.

apply plugin: 'spring-boot'
apply plugin: 'docker-java'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = 'com.myzoodata.MyzoodataApplication'
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
	compile ('org.springframework.boot:spring-boot-starter-jetty') {
        exclude group: 'org.eclipse.jetty.websocket'
	}
//	compile('org.springframework.boot:spring-boot-starter-actuator')
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-rest:$springBootVersion"
//    compile "org.springframework.cloud:spring-cloud-config-client:$springCloudVersion"
//    compile "org.springframework.cloud:spring-cloud-starter-eureka:$springCloudVersion"
//    compile "org.springframework.cloud:spring-cloud-starter-feign:$springCloudVersion"
	runtime "mysql:mysql-connector-java:5.1.38"
	testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
}

ext {
    mysqlServerAddr = 'mysql'
}

docker {
    serverPort = 8100

    dockerImageGroup = 'kkelemen'
    dockerImageName = 'myzoodata'

    addLink 'mysql', mysqlServerAddr
    addLink 'EurekaService', 'eureka'
    addLink 'ConfigService', 'configservice'
}

run {
    jvmArgs "-Dsqlserver=${mysqlServerAddr}", "-DPORT=${docker.serverPort}"
}
